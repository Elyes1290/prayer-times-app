name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test -- --coverage --passWithNoTests

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for secrets in code
        run: |
          echo "üîç Scanning for potential secrets..."
          # Use the same improved scan as security.yml
          # Scan HYPER-S√âLECTIF : ne d√©tecte que les VRAIS secrets avec patterns suspects
          SCAN_RESULTS=$(grep -r -E "(password|secret|api_key|token)\s*[=]\s*['\"]([a-zA-Z0-9+/]{16,}|sk_[a-zA-Z0-9_]+|ghp_[a-zA-Z0-9_]+|xox[a-z]-[a-zA-Z0-9-]+|AIza[a-zA-Z0-9_-]+)['\"]" . \
            --exclude-dir=node_modules \
            --exclude-dir=.git \
            --exclude-dir=.github \
            --exclude-dir=__tests__ \
            --exclude-dir=coverage \
            --exclude-dir=locales \
            --exclude-dir=scripts \
            --exclude="*.md" \
            --exclude="*.test.ts" \
            --exclude="*.test.tsx" \
            --exclude="*locales*.json" \
            --exclude="*template*.php" \
            --exclude="*config-template*" \
            --exclude="package-lock.json" \
            --exclude=".gitignore" \
            --exclude="*.sql" \
            | grep -v "process.env" \
            | grep -v "Constants.expoConfig" \
            | grep -v "_ENV\[" \
            | grep -v "DEFAULT_CONFIG" \
            | grep -v "placeholder" \
            | grep -v "example" \
            | grep -v "your_" \
            | grep -v "template" \
            | grep -v "has_password" \
            | grep -v "error_log" || true)

          if [ -n "$SCAN_RESULTS" ]; then
            echo "‚ùå Real secrets found in code:"
            echo "================================"
            echo "$SCAN_RESULTS"
            echo "================================"
            echo "Please remove or move these secrets to environment variables"
            exit 1
          else
            echo "‚úÖ No real secrets found"
          fi

  # Note: Build job removed - you handle builds manually
  # This CI pipeline now only runs tests and security checks
  # You can add build jobs later when needed
