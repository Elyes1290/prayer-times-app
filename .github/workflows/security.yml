name: Security Audit

on:
  schedule:
    - cron: "0 2 * * 1" # Tous les lundis à 2h du matin
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Check for hardcoded secrets
        run: |
          echo "🔍 Scanning for potential secrets..."
          # Exclude test files, translations, and legitimate config patterns
          SCAN_RESULTS=$(grep -r -i "password\|secret\|key\|token\|api_key" . \
            --exclude-dir=node_modules \
            --exclude-dir=.git \
            --exclude-dir=__tests__ \
            --exclude-dir=coverage \
            --exclude-dir=locales \
            --exclude="*.md" \
            --exclude="*.test.ts" \
            --exclude="*.test.tsx" \
            --exclude="*locales*.json" \
            --exclude="*template*.php" \
            --exclude="*config-template*" \
            | grep -v "test-" \
            | grep -v "mock" \
            | grep -v "verse_key" \
            | grep -v "method_Turkey" \
            | grep -v "Turkey" \
            | grep -v "jest.fn" \
            | grep -v "jest.fn((key)" \
            | grep -v "translation.*key" \
            | grep -v '"key"' \
            | grep -v "'key'" \
            | grep -v "keyof" \
            | grep -v "apiKey.*test" \
            | grep -v "password_hash" \
            | grep -v "password_verify" \
            | grep -v "PASSWORD_DEFAULT" \
            | grep -v "validation_password" \
            | grep -v "help_password" \
            | grep -v "AdhanSoundKey" \
            | grep -v "CalcMethodKey" \
            | grep -v "STORAGE_KEY" \
            | grep -v "keysToPreserve" \
            | grep -v "keysToDelete" \
            | grep -v "error_log.*password" || true)

          if [ -n "$SCAN_RESULTS" ]; then
            echo "❌ Real secrets found in code:"
            echo "================================"
            echo "$SCAN_RESULTS"
            echo "================================"
            echo "Please remove or move these secrets to environment variables"
            exit 1
          else
            echo "✅ No real secrets found"
          fi

      - name: Check file permissions
        run: |
          echo "🔍 Checking file permissions..."
          find . -name "*.env*" -o -name "*.key" -o -name "*.pem" | while read file; do
            if [ -f "$file" ]; then
              perms=$(stat -c "%a" "$file")
              if [ "$perms" != "600" ] && [ "$perms" != "400" ]; then
                echo "⚠️  File $file has insecure permissions: $perms"
              fi
            fi
          done

      - name: Check for exposed API keys
        run: |
          echo "🔍 Checking for exposed API keys..."
          if grep -r "sk_live\|pk_live\|AKIA\|ghp_" . --exclude-dir=node_modules --exclude-dir=.git; then
            echo "❌ Live API keys found in code"
            exit 1
          else
            echo "✅ No live API keys found"
          fi

  dependency-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Check for outdated dependencies
        run: npm outdated

      - name: Check for vulnerable dependencies
        run: npm audit --audit-level=high

      - name: Generate dependency report
        run: |
          echo "📊 Dependency Report" > dependency-report.md
          echo "===================" >> dependency-report.md
          echo "" >> dependency-report.md
          echo "## Outdated Dependencies" >> dependency-report.md
          npm outdated --json >> dependency-report.md || echo "No outdated dependencies" >> dependency-report.md
          echo "" >> dependency-report.md
          echo "## Security Vulnerabilities" >> dependency-report.md
          npm audit --json >> dependency-report.md || echo "No vulnerabilities found" >> dependency-report.md

      - name: Upload dependency report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-report
          path: dependency-report.md
